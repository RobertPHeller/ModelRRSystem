#!=TCLSH=
#* 
#* ------------------------------------------------------------------
#* LocoTest.tcl - Test Program for the Rail Driver Daemon.
#* Created by Robert Heller on Sat May  5 10:29:48 2007
#* ------------------------------------------------------------------
#* Modification History: $Log$
#* Modification History: Revision 1.3  2007/05/06 19:14:57  heller
#* Modification History: Lock down  for 2.1.8 release candidate 1
#* Modification History:
#* Modification History: Revision 1.1  2007/05/06 13:45:41  heller
#* Modification History: Lock down  for 2.1.8 release candidate 1
#* Modification History:
#* Modification History: Revision 1.1  2002/07/28 14:03:50  heller
#* Modification History: Add it copyright notice headers
#* Modification History:
#* ------------------------------------------------------------------
#* Contents:
#* ------------------------------------------------------------------
#*  
#*     Model RR System, Version 2
#*     Copyright (C) 1994,1995,2002-2007  Robert Heller 
#*			D/B/A Deepwoods Software
#* 			51 Locke Hill Road
#* 			Wendell, MA 01379-9728
#* 
#*     This program is free software; you can redistribute it and/or modify
#*     it under the terms of the GNU General Public License as published by
#*     the Free Software Foundation; either version 2 of the License, or
#*     (at your option) any later version.
#* 
#*     This program is distributed in the hope that it will be useful,
#*     but WITHOUT ANY WARRANTY; without even the implied warranty of
#*     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#*     GNU General Public License for more details.
#* 
#*     You should have received a copy of the GNU General Public License
#*     along with this program; if not, write to the Free Software
#*     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#* 
#*  
#* 

# Global variables containing current settings.
global Direction Throttle IndepentBrake CurrentSpeed

# Initial speed is 0 (stopped)
set CurrentSpeed 0
# Initial direction is 0 (neutral)
set Direction 0
# Initial throttle setting is 0 (idle)
set Throttle 0
# Initial independent brake setting is 0 (released)
set IndepentBrake 0

# Constant: maximim allowed speed.
global MaximumSpeed
# Max simulated speed is 60 (mph)
set MaximumSpeed 60

# Alert button flag
global Alert
set Alert 0

# Tables that map lever positions to throttle and 
# brake application values
global ThrottleValues IndepentBrakeValues

array set ThrottleValues {
   0  0   1  0   2  0   3  0   4  0   5  0   6  0   7  0
   8  0   9  0  10  0  11  0  12  0  13  0  14  0  15  0
  16  0  17  0  18  0  19  0  20  0  21  0  22  0  23  0
  24  0  25  0  26  0  27  0  28  0  29  0  30  0  31  0
  32  0  33  0  34  0  35  0  36  0  37  0  38  0  39  0
  40  0  41  0  42  0  43  0  44  0  45  0  46  0  47  0
  48  0  49  0  50  0  51  0  52  0  53  0  54  0  55  0
  56  0  57  0  58  0  59  0  60  0  61  0  62  0  63  0
  64  0  65  0  66  0  67  0  68  0  69  0  70  0  71  0
  72  0  73  0  74  0  75  0  76  0  77  0  78  0  79  0
  80  0  81  0  82  0  83  0  84  0  85  0  86  0  87  0
  88  0  89  0  90  0  91  0  92  0  93  0  94  0  95  0
  96  0  97  0  98  0  99  0 100  0 101  0 102  0 103  0
 104  0 105  0 106  0 107  0 108  0 109  0 110  0 111  0
 112  0 113  0 114  0 115  0 116  0 117  0 118  0 119  0
 120  0 121  0 122  0 123  0 124  0 125  0 126  0 127  0
 128  0 129  0 130  0 131  0 132  0 133  0 134  0 135  0
 136  0 137  0 138  0 139  0 140  0 141  0 142  0 143  0
 144  0 145  0 146  0 147  0 148  0 149  0 150  0 151  0
 152  0 153  0 154  0 155  0 156  0 157  0 158  1 159  1
 160  2 161  2 162  2 163  3 164  3 165  4 166  4 167  4
 168  5 169  5 170  6 171  6 172  6 173  7 174  7 175  8
 176  8 177  9 178  9 179  9 180 10 181 10 182 11 183 11
 184 11 185 12 186 12 187 13 188 13 189 13 190 14 191 14
 192 15 193 15 194 16 195 16 196 16 197 17 198 17 199 18
 200 18 201 18 202 19 203 19 204 20 205 20 206 20 207 21
 208 21 209 22 210 22 211 23 212 23 213 23 214 24 215 24
 216 25 217 25 218 25 219 26 220 26 221 27 222 27 223 27
 224 28 225 28 226 29 227 29 228 30 229 30 230 30 231 30
 232 30 233 30 234 30 235 30 236 30 237 30 238 30 239 30
 240 30 241 30 242 30 243 30 244 30 245 30 246 30 247 30
 248 30 249 30 250 30 251 30 252 30 253 30 254 30
}
array set IndepentBrakeValues {
   0 30   1 30   2 30   3 30   4 30   5 30   6 30   7 30
   8 30   9 30  10 30  11 30  12 30  13 30  14 30  15 30
  16 30  17 30  18 30  19 30  20 30  21 30  22 30  23 30
  24 30  25 30  26 30  27 30  28 30  29 30  30 30  31 30
  32 30  33 30  34 30  35 30  36 30  37 30  38 30  39 30
  40 30  41 30  42 29  43 29  44 29  45 29  46 29  47 29
  48 28  49 28  50 28  51 28  52 28  53 28  54 27  55 27
  56 27  57 27  58 27  59 26  60 26  61 26  62 26  63 26
  64 26  65 25  66 25  67 25  68 25  69 25  70 25  71 24
  72 24  73 24  74 24  75 24  76 23  77 23  78 23  79 23
  80 23  81 23  82 22  83 22  84 22  85 22  86 22  87 22
  88 21  89 21  90 21  91 21  92 21  93 21  94 20  95 20
  96 20  97 20  98 20  99 19 100 19 101 19 102 19 103 19
 104 19 105 18 106 18 107 18 108 18 109 18 110 18 111 17
 112 17 113 17 114 17 115 17 116 16 117 16 118 16 119 16
 120 16 121 16 122 15 123 15 124 15 125 15 126 15 127 15
 128 14 129 14 130 14 131 14 132 14 133 13 134 13 135 13
 136 13 137 13 138 13 139 12 140 12 141 12 142 12 143 12
 144 12 145 11 146 11 147 11 148 11 149 11 150 11 151 10
 152 10 153 10 154 10 155 10 156  9 157  9 158  9 159  9
 160  9 161  9 162  8 163  8 164  8 165  8 166  8 167  8
 168  7 169  7 170  7 171  7 172  7 173  6 174  6 175  6
 176  6 177  6 178  6 179  5 180  5 181  5 182  5 183  5
 184  5 185  4 186  4 187  4 188  4 189  4 190  3 191  3
 192  3 193  3 194  3 195  3 196  2 197  2 198  2 199  2
 200  2 201  2 202  1 203  1 204  1 205  1 206  1 207  1
 208  0 209  0 210  0 211  0 212  0 213  0 214  0 215  0
 216  0 217  0 218  0 219  0 220  0 221  0 222  0 223  0
 224  0 225  0 226  0 227  0 228  0 229  0 230  0 231  0
 232  0 233  0 234  0 235  0 236  0 237  0 238  0 239  0
 240  0 241  0 242  0 243  0 244  0 245  0 246  0 247  0
 248  0 249  0 250  0 251  0 252  0 253  0 254  0
}

# Contains the file  channel connected to the daemon process
global Socket

# Connect to server
set Socket [socket localhost 41000]
# Line buffering
fconfigure $Socket -buffering line

# File event to asyncronously handle messages from the server
fileevent $Socket readable {
	# Get a line from the server. 
	# If EOF, close the connection and exit.
	if {[gets $Socket line] < 0} {
	   close $Socket
	   after 1000 exit
	} else {
	  # Reverser lever moved?  Get its setting and save in Direction
	  if {$CurrentSpeed == 0 && 
	      [regexp {REVERSER=([0-9]*)} "$line" -> reverser] > 0} {
	    if {$reverser < 64} {
	      set Direction 1
	    } elseif {$reverser > 220} {
	      set Direction -1
	    } elseif {$reverser < 128 && $reverser > 100} {
	      set Direction 0
	      set Throttle 0
	    }
	  }
	  # Throttle lever moved?  Fetch its value.
	  if {[regexp {THROTTLE=([0-9]*)} "$line" -> throttle] > 0} {
	    if {$Direction != 0} {
	      set Throttle $ThrottleValues($throttle)
	    }
	  }
	  # Indepent Brake lever moved?  Fetch its value.
	  if {[regexp {INDEPENDBRK=([0-9]*)} "$line" -> ibrake] > 0} {
	    set IndepentBrake $IndepentBrakeValues($ibrake)
	  }
	  # Check for Alert button (one of the bits in DIGITAL5).
	  #puts stderr "*** line = $line"
	  if {[regexp {DIGITAL5=\((.*)\)} "$line" -> d5] > 0} {
	    # Alert button pressed?  Flag it.
	    #puts stderr "*** d5 = $d5"
	    if {[string first Alert "$d5"] >= 0} {
	      set Alert 1
	    }
	  }
	}

}

# This proc is run every 1/2 second and simulates a locomotive.
proc Update {} {
	# Globals
	global Direction Throttle IndepentBrake CurrentSpeed
	global MaximumSpeed
	global Socket
	global Alert

	# Was the Alert button pressed?  If so, reset the speedometer 
	# display and close the connection to the server
	if {$Alert} {
	  puts $Socket "LED 000"
	  flush $Socket
	  puts $Socket "Exit"
	  flush $Socket
	  return
	}
	# If the reverser is not in neutral, apply the throttle's 
	# acceleration.
	if {$Direction != 0} {
	  incr CurrentSpeed $Throttle
	}
	incr CurrentSpeed -1;#	Entropy (rolling friction)
	incr CurrentSpeed -$IndepentBrake;# Brake Application
	# Apply the governer (speed limit)
	if {$CurrentSpeed > $MaximumSpeed} {
	  set CurrentSpeed $MaximumSpeed
	}
	# Avoid a negative speed
	if {$CurrentSpeed < 0} {set CurrentSpeed 0}
	# Format the speed for  display.
	set digits [format {%2d} $CurrentSpeed]
	regsub -all { } "$digits" {_} digits
	# Apply direction.
	if {$Direction < 0} {
	  set digits "-$digits"
	} else {
	  set digits "_$digits"
	}
	# Update the speedometer.
	puts $Socket "LED $digits"
	flush $Socket
	# Fetch new values.
	puts $Socket "POLLVALUES REVERSER THROTTLE INDEPENDBRK DIGITAL5"
	flush $Socket

	# Sleep for 1/2 second and check again.
	after 500 Update
}


# Initial poll
puts $Socket "POLLVALUES REVERSER THROTTLE INDEPENDBRK DIGITAL5"
flush $Socket
# Sleep for 1/2 second and check.
after 500 Update

# Enter event loop.
vwait forever
