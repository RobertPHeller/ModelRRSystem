#!=WISH=
#* 
#* ------------------------------------------------------------------
#* TimeTable.src - Main TimeTable script
#* Created by Robert Heller on Mon Dec 26 14:33:36 2005
#* ------------------------------------------------------------------
#* Modification History: $Log: TimeTable.src,v $
#* Modification History: Revision 1.9  2007/10/22 17:17:28  heller
#* Modification History: 10222007
#* Modification History:
#* Modification History: Revision 1.8  2007/05/06 12:49:45  heller
#* Modification History: Lock down  for 2.1.8 release candidate 1
#* Modification History:
#* Modification History: Revision 1.7  2007/04/19 17:23:25  heller
#* Modification History: April 19 Lock Down
#* Modification History:
#* Modification History: Revision 1.6  2007/02/01 20:00:54  heller
#* Modification History: Lock down for Release 2.1.7
#* Modification History:
#* Modification History: Revision 1.5  2006/05/22 17:01:12  heller
#* Modification History: Updated make install
#* Modification History:
#* Modification History: Revision 1.4  2006/05/16 19:27:46  heller
#* Modification History: May162006 Lockdown
#* Modification History:
#* Modification History: Revision 1.3  2006/03/06 18:46:21  heller
#* Modification History: March 6 lockdown
#* Modification History:
#* Modification History: Revision 1.2  2006/02/26 23:09:25  heller
#* Modification History: Lockdown for machine xfer
#* Modification History:
#* Modification History: Revision 1.1  2006/01/03 15:30:22  heller
#* Modification History: Lockdown
#* Modification History:
#* Modification History: Revision 1.1  2002/07/28 14:03:50  heller
#* Modification History: Add it copyright notice headers
#* Modification History:
#* ------------------------------------------------------------------
#* Contents:
#* ------------------------------------------------------------------
#*  
#*     Model RR System, Version 2
#*     Copyright (C) 1994,1995,2002-2005  Robert Heller D/B/A Deepwoods Software
#* 			51 Locke Hill Road
#* 			Wendell, MA 01379-9728
#* 
#*     This program is free software; you can redistribute it and/or modify
#*     it under the terms of the GNU General Public License as published by
#*     the Free Software Foundation; either version 2 of the License, or
#*     (at your option) any later version.
#* 
#*     This program is distributed in the hope that it will be useful,
#*     but WITHOUT ANY WARRANTY; without even the implied warranty of
#*     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#*     GNU General Public License for more details.
#* 
#*     You should have received a copy of the GNU General Public License
#*     along with this program; if not, write to the Free Software
#*     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#* 
#*  
#* 


#* $Id$

## @defgroup TimeTable TimeTable
# @brief Time Table program (v2)
#
# @section SYNOPSIS
#
# TimeTable [X11 Resource Options] -totaltime time -timeincrement timeincr
#
# TimeTable [X11 Resource Options] [timetablefile]
#
# @section DESCRIPTION
# 
# This program aids in the creation of (employee) timetables.  This is a two
# step process.  First, the sceduled trains are graphed on a chart of station
# stops over time.  Then the trains are collected and a time table document
# is created.  The program generates a LaTeX source file which can then be
# processed by the LaTeX system to create a PostScript, PDF, or (using tex4ht)
# a HTML file.
#
# There are two ways to invoke the program.  A new time table file can be
# generated by specifing the total time and the time increment, using the
# @b -totaltime and @b -timeincrement options. An existing time table file 
# can be read in and edited by specificing the name of this file on the command
# line.  If neither options nor file name are specified on the command like
# the program starts with a blank workspace and expects the @b New or @b Open
# commands to be issued.
#
# @section OPTIONS
#
# @arg -totaltime This is a whole number specifying the total time in minutes.
# @arg -timeincrement This is a whole number specifying the the grid interval
# 	on the time table graph.
# @par 
#
# @section PARAMETERS
# @arg timetablefile The name of a time table file to load and edit.
# @par
# 
# @section FILES
#
#  <b>$HOME</b>/.timeTable (TimeTable.rc under MS-Windows) contains these
#  runtime configuration options:
#
#  -# pdflatex Path of the PDFLaTeX program.  
#  -# chart labelwidth The label width of labels on the chart.  The 
#	default is 100.
#  -# mainwindow height The height of the main window.  The default is 0,
#	which means the height will float to its natural height.
#  -# mainwindow width The width of the main window.  The default is 0,
#	which means the width will float to its natural width.
# @par
#
# @section SA SEE ALSO
# TimeTableLaTeXOpts(1)
# @par
#
# @section AUTHOR
# Robert Heller \<heller\@deepsoft.com\>
#



set argv0 [file join [file dirname [info nameofexecutable]] TimeTable]

package require Version
namespace eval MRRSystem {variable TTCLASSES_VERSION}
set MRRSystem::TTCLASSES_VERSION [package require Ttclasses]
package require gettext
package require Tk
package require tile
package require snitStdMenuBar
package require HTMLHelp 2.0
package require Splash

#catch {console show}

namespace eval TimeTable {

  variable ImageDir [file join [file dirname [file dirname [info script]]] \
			TimeTable2]
  variable CommonImageDir [file join [file dirname [file dirname [info script]]] \
			Common]
  variable HelpDir [file join [file dirname [file dirname [file dirname \
                                                        [info script]]]] Help]
}

set msgfiles [::msgcat::mcload [file join [file dirname [file dirname [file dirname \
                                                        [info script]]]] Messages]]
#puts stderr "*** msgfiles = $msgfiles"


image create photo banner -file [file join $TimeTable::ImageDir banner.gif]
# Image used as a banner for all dialog boxes.
# [index] banner!image

image create photo CloseButtonImage -file [file join $TimeTable::CommonImageDir close.gif]

image create photo DeepwoodsBanner -format gif \
	-file [file join $TimeTable::CommonImageDir DeepwoodsBanner.gif]
# Deepwoods banner image.  Used in the splash screen.
# [index] DeepwoodsBanner!image

package require TTSystemConfiguration

namespace eval TimeTable {
  global tcl_platform
  variable SysConfigFile
  global env
  if {[catch {set env(HOME)} HOME]} {set HOME [pwd]}
  switch $tcl_platform(platform) {
    windows {
      set SysConfigFile [file join $HOME TimeTable.rc]
    }
    macintosh -
    unix {
      set SysConfigFile [file join $HOME .timeTable]
    }
  }

  if {[file readable "$::TimeTable::SysConfigFile"]} {
    ::TimeTable::TimeTableConfiguration read "$::TimeTable::SysConfigFile"
  } elseif {[file writable "$::TimeTable::SysConfigFile"]} {
    ::TimeTable::TimeTableConfiguration write "$::TimeTable::SysConfigFile"
  }

  set argcTest 0
  variable IsSlave 0

  variable HasSetTimeInfoP 0
  variable HasTTFileP 0
  variable TimeTableFile
  variable TTName
  variable TotalTime
  variable TimeIncrement

  for {set ia 0} {$ia < $argc} {incr ia} {
    switch -glob -- "[lindex $argv $ia]" {
      -totaltime {
	incr ia
	set t "[lindex $argv $ia]"
	if {[string is integer -strict "$t"]} {
	  set time $t
	} else {
	  puts stderr [_ "%s: -totaltime: not a number: %s" $argv0 $t]
	  exit 99
	}
	if {$time < 1 || $time > [expr 24 * 60]} {
	  puts stderr [_ "%s: -totaltime: value out of range (1 to [expr 24 * 60]): %d" $argv0 $time]
	  exit 99
	}
	set TotalTime $time
	incr HasSetTimeInfoP
      } 
      -timeincr* {
    	incr ia
    	set t "[lindex $argv $ia]"
    	if {[string is integer -strict "$t"]]} {
	  set time $t
	} else  {
    	  puts stderr [_ "%s: -timeincrement: not a number: %s" $argv0 $t]
    	  exit 98
    	}
    	if {$time < 1 || $time > $TotalTime} {
    	  puts stderr [_ "%s: -timeincrement: value out of range (1 to %d): %d" $argv0 $TotalTime $time]
    	  exit 98
    	}
    	set TimeIncrement $time
    	incr HasSetTimeInfoP
      }
      -isslave* {
      set IsSlave 1
      incr argcTest
      fconfigure stdin -buffering line
      fconfigure stdout -buffering line
      }
      -psn* {
      }
      -* {
    	puts stderr [_ "usage: %s \[wish options\] -- \[-totaltime time\] \[-timeincrement time\] \[-isslave\] \[timetablename or timetablefile\]" $argv0]
	exit 96
      }
      default {
	if {$HasSetTimeInfoP > 1} {
	  set TTName "[lindex $argv $ia]"
	  incr HasSetTimeInfoP
	} else {
	  set file "[lindex $argv $ia]"
	  if {[file readable "$file"]} {
	    set TimeTableFile "$file"
	    incr HasTTFileP
	  } else {
	    puts stderr [_ "%s: timetablefile: file not readable: %s" $argv0 $file]
	    exit 95
	  }
	}
      }
    }
  }
}

proc TimeTable::SplashScreen {} {
  # Build the ``Splash Screen'' -- A popup window that tells the user what 
  # we are all about.  It gives the version and brief copyright information.
  #
  # The upper part of the splash screen gives the brief information, with
  # directions on how to get detailed information.  The lower part contains
  # an image banner for Deepwoods Software.
  # [index] SplashScreen!procedure

  splash .mrrSplash \
	-title [_ "Model Railroad Timetable Chart Program 2.0, Copyright (C) \
2005-2011 Robert Heller D/B/A Deepwoods Software Model Railroad Timetable \
Chart Program comes with ABSOLUTELY NO WARRANTY; for details select \
'Warranty...' under the Help menu.  This is free software, and you are \
welcome to redistribute it under certain conditions; select 'Copying...' \
under the Help menu. TT Support Library version: \
%s. System patch level: %s." $MRRSystem::TTCLASSES_VERSION \
$MRRSystem::SYSTEMVERSION]\
	-icon banner -image DeepwoodsBanner -background {#2ba2bf} \
	-titleforeground white -statusforeground {black}
}

proc TimeTable::SplashWorkMessage {message percent} {
  .mrrSplash update "$message" $percent
  update
}

if {!$TimeTable::IsSlave} {

  wm withdraw .

  TimeTable::SplashScreen

  update

}

package require TTMainWindow
TimeTable::MainWindow $TimeTable::IsSlave
package require TTMenuSupport
package require TTFileIO
if {[catch {package require TTTrains} error]} {
#  puts stderr "*** {package require TTTrains} error = $error"
#  puts stderr "*** {package require TTTrains} errorInfo = $errorInfo"
}
if {[catch {package require TTStations} error]} {
  puts stderr "*** {package require TTStations} error = $error"
  puts stderr "*** {package require TTStations} errorInfo = $errorInfo"
}
if {[catch {package require TTCabs} error]} {
  puts stderr "*** {package require TTCabs} error = $error"
  puts stderr "*** {package require TTCabs} errorInfo = $errorInfo"
}
if {[catch {package require TTNotes} error]} {
  puts stderr "*** {package require TTNotes} error = $error"
  puts stderr "*** {package require TTNotes} errorInfo = $errorInfo"
}
if {[catch {package require TTPrint} error]} {
  puts stderr "*** {package require TTPrint} error = $error"
  puts stderr "*** {package require TTPrint} errorInfo = $errorInfo"
}

$TimeTable::Main toolbar addbutton tools close -image CloseButtonImage \
	-command TimeTable::CarefulExit \
	-helptext [_ "Close the application"]
$TimeTable::Main buttons add ttk::button quit -text [_m "Button|Quit -- Exit NOW Q"] \
		      -command TimeTable::CarefulExit -underline 0
#		       -helptext [_ "Exit the application"]
bind . <Q> "$TimeTable::Main buttons invoke quit"
bind . <q> "$TimeTable::Main buttons invoke quit"

catch {TimeTable::SplashWorkMessage [_ "Loading Data"] 99}

if {$TimeTable::HasSetTimeInfoP > 2} {
  TimeTable::NewTimeTable "$TimeTable::TTName" $TimeTable::TotalTime $TimeTable::TimeIncrement
} elseif {$TimeTable::HasTTFileP == 1} {
  TimeTable::LoadTimeTable "$TimeTable::TimeTableFile"
}

set extraX 0


catch {TimeTable::SplashWorkMessage {Done} 100}

if {!$TimeTable::IsSlave} {  
  $TimeTable::Main showit
} else {
  fileevent stdin readable {
    if {[gets stdin line] < 0} {TimeTable::CarefulExit no}
    switch -- "$line" {
      {201 Exit} {TimeTable::CarefulExit no}
      default {}
    }
  }
}

set mwidth  [TimeTable::TimeTableConfiguration getkeyoption mainwindow width]
set mheight [TimeTable::TimeTableConfiguration getkeyoption mainwindow height]
if {$mwidth > 0 && $mheight > 0} {
#  puts stderr "*** mwidth = $mwidth, mheight = $mheight"
#  $TimeTable::Main configure -width $mwidth -height $mheight
  wm geometry . ${mwidth}x${mheight}
}

if {$::tcl_platform(os) eq "Darwin"} {
    proc ::tk::mac::ReopenApplication {} {
        if {[wm state .] eq "withdrawn"} {
            wm state . normal
        } else {
            wm deiconify .
        }
    }
    proc ::tk::mac::Quit {} {
        TimeTable::CarefulExit
    }
    proc ::tk::mac::OnHide {} {
        wm withdraw .
    }
    proc ::tk::mac::OnShow {} {
        if {[wm state .] eq "withdrawn"} {
            wm state . normal
        } else {
            wm deiconify .
        }
    }
    
    proc ::tk::mac::ShowHelp {} {
        HTMLHelp help {Time Table (V2) Reference}
    }
}
